---
const { locale, timestamp, permalink, media, caption, type, id, title, aspect_ratio } = Astro.props;
import type { ChildrenData } from '../types/posts';
let carousel: ChildrenData[] = [],
  video,
  image;
if (type === 'CAROUSEL_ALBUM') {
  carousel = media as ChildrenData[];
} else if (type === 'VIDEO') {
  video = media;
} else {
  let imagePath = media;
  image = imagePath;
}
const formatAspectRatio = (aspect_ratio: string) => {
  return aspect_ratio ? 'aspect-ratio: ' + aspect_ratio : 'auto';
};
const formattedDate: Date = new Date(timestamp);
const formattedLocaleDate = formattedDate.toLocaleDateString(locale.replace('_', '-'), {
  year: 'numeric',
  month: '2-digit',
  day: '2-digit',
});
---

{
  permalink && (
    <span
      class="igPost"
      onclick="window.open(this.attributes['data-href'].value)"
      data-href={permalink}
    >
      {formattedLocaleDate} IG POST
    </span>
  )
}
{title && <span class="igPost">{`${formattedLocaleDate} - ${title}`}</span>}
{!permalink && !title && <span class="igPost">{formattedLocaleDate}</span>}
<p>{caption}</p>
{
  image && (
    <img
      loading="lazy"
      style={formatAspectRatio(aspect_ratio)}
      src={image}
      alt={title ? title : id ? id : 'alt'}
    />
  )
}
{video && <video src={video} controls />}
{
  carousel &&
    carousel.map((carouselItem: ChildrenData) => {
      if (carouselItem.media_type === 'VIDEO') {
        return <video src={carouselItem.media_url} controls />;
      } else if (carouselItem.media_type === 'IMAGE') {
        let imagePath = carouselItem.media_url;
        return (
          <img
            loading="lazy"
            style={carouselItem.aspect_ratio && formatAspectRatio(carouselItem.aspect_ratio)}
            src={imagePath}
            alt={carouselItem.id ? carouselItem.id : 'alt'}
          />
        );
      }
      return null;
    })
}

<style>
  img {
    border-radius: 5px;
    width: 100%;
    height: auto;
  }

  .igPost {
    color: purple;
    font-size: 1.25em;
    font-weight: bold;
    text-decoration: underline;
    cursor: pointer;
  }

  p {
    white-space: pre-line;
  }

  video {
    width: 100%;
    height: auto;
  }
</style>
