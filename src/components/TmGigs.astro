---
import type { AvailableLanguages, AvailableLocales } from 'src/types/language';
import TmPastGigs from './TmPastGigs.astro';
import TmUpcomingGigs from './TmUpcomingGigs.astro';
import { type Gig } from './../types/gigs';
import { getGigs } from '../utils/gigsUtils';
interface Props {
  data: string;
  pastGigsTitle: string;
  upcomingGigsTitle: string;
  language: AvailableLanguages;
  locale: AvailableLocales;
}
const { data, pastGigsTitle, upcomingGigsTitle, language, locale } = Astro.props;

const gigsRequest = await getGigs(locale, 0);
const gigs = gigsRequest as { upcomingGigs: Gig[]; pastGigs: Gig[] };
const { upcomingGigs, pastGigs }: { upcomingGigs: Gig[]; pastGigs: Gig[] } = gigs;
---

<span class="title section">{data}</span>
{upcomingGigs.length === 0 && pastGigs.length === 0 && <p>No gigs found</p>}
{
  upcomingGigs.length !== 0 && (
    <div>
      <span class="title gigs">{upcomingGigsTitle}</span>
      <ul id="upcomingGigs">
        <TmUpcomingGigs data={upcomingGigs} />
      </ul>
    </div>
  )
}
{
  pastGigs.length !== 0 && (
    <div>
      <span class="title gigs">{pastGigsTitle}</span>
      <ul id="pastGigs">
        <TmPastGigs data={pastGigs} language={language} />
      </ul>
    </div>
  )
}

<style>
  a {
    color: darkblue;
  }

  .title {
    display: block;
    text-align: center;
    font-weight: bold;
  }

  .section {
    font-size: 1.5em;
    margin: 10px 0;
  }

  .gigs {
    font-size: 1.2em;
  }

  p {
    text-align: center;
  }

  div:last-child {
    border-radius: 10px;
    background-color: #ddd;
    padding: 10px 10px;
  }

  ul {
    padding: 0;
  }
</style>
