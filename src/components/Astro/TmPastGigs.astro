---
import { getDictionary } from 'src/locales/getDictionary';
import type { Gig } from 'src/types/gigs';
import type { AvailableLanguages } from 'src/types/language';
import { TmGigsButtons } from 'src/components/Lit/TmGigsButtons';

interface Props {
  data: Gig[];
  language: AvailableLanguages;
}

const { data, language } = Astro.props;

const dictionary = getDictionary(language);
const totalGigs = data.length - 1;
---

{
  data.map((gig, count) => {
    return (
      <>
        <li class="pastGig">
          {gig.url ? (
            <a href={gig.url} target="_blank">
              {gig.name}
            </a>
          ) : (
            <span>{gig.name}</span>
          )}
          <span>{gig.dateToShow}</span>
        </li>
        {count === totalGigs && (
          <li>
            <TmGigsButtons client:visible>
              <span slot="moreGigs">{dictionary.Common.moreGigs}</span>
              <span slot="closeGigs">{dictionary.Common.closeContent}</span>
            </TmGigsButtons>
          </li>
        )}
      </>
    );
  })
}

<style>
  a {
    color: darkblue;
    transition: color 0.2s;
  }

  a:hover {
    color: #06f;
  }

  li {
    display: flex;
    justify-content: space-between;
    min-height: 48px;
    align-items: center;
  }

  li:last-of-type {
    display: block;
  }
</style>
